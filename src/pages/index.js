import Head from 'next/head'
import styles from '@/styles/Home.module.scss'
import { MDBInput, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBDropdownItem } from 'mdb-react-ui-kit'
import { useState, useEffect } from 'react'

export default function Home() {
  const [jobTitle, setJobTitle] = useState('')
  const [currentLocation, setCurrentLocation] = useState('')
  const [livingType, setLivingType] = useState('')
  const [citiesData, setCitiesData] = useState([])
  const [singleCity, setSingleCity] = useState(false)

  useEffect(() => {
    fetch('/api/cities')
      .then(response => response.json())
      .then(data => {
        // console.log(data)
        if(typeof data === 'object')
          setSingleCity(true)
        setCitiesData(data)
      })
  }, [])

  useEffect(() => {
    fetch('/api/jobs')
      .then(response => response.json())
      .then(data => {
        console.log(data)
      })
  }, [])


  const handleJobTitle= (e) => setJobTitle(e.target.value)

  const handleCurrentLocation= (e) => setCurrentLocation(e.target.value)

  const handleLivingType= (e) => setLivingType(e.target.textContent)

  const renderList = (items) => (
    <ul>
      {items.map((item, index) => (
        <li key={index}>{item.Cost}: {item.Value}</li>
      ))}
    </ul>
  );

  const renderSection = (title, items) => (
    <div>
      <h3>{title}</h3>
      {renderList(items)}
    </div>
  );

  return (
    <>
      <Head>
        <title>Hackabull 2023</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className=' flex form'>
          <MDBInput label='Job Title' className='input' type='text' value={jobTitle} onChange={e => handleJobTitle(e)} contrast='true' />
          <MDBInput label='Current Location' className='input' type='text' value={currentLocation} onChange={e => handleCurrentLocation(e)} contrast='true' />
          <MDBDropdown animation>
            <MDBDropdownToggle contrast='true'>{livingType || 'Living Type'}</MDBDropdownToggle>
            <MDBDropdownMenu contrast='true'>
              <MDBDropdownItem link onClick={e => handleLivingType(e)}>Rent</MDBDropdownItem>
              <MDBDropdownItem link onClick={e => handleLivingType(e)}>Buy</MDBDropdownItem>
              <MDBDropdownItem link onClick={e => handleLivingType(e)}>Lease</MDBDropdownItem>
            </MDBDropdownMenu>
          </MDBDropdown>
        </div>
        <div className='data'>
          <h1>Cities</h1>
          { 
            singleCity
            ? 
            <div>
              <h2>City: {citiesData["City Name"]}, {citiesData["Country Name"]}</h2>
              <h3>Currency: {citiesData.Currency}</h3>
              <h4>Cost of Living Month Total: {citiesData["Cost of Living Month Total"]}</h4>
              <h4>Note: {citiesData.Note}</h4>
        
              {renderSection("Buy Apartment Prices", citiesData["Buy Apartment prices"])}
              {renderSection("Childcare Prices", citiesData["Childcare prices"])}
              {renderSection("Clothing And Shoes Prices", citiesData["Clothing And Shoes prices"])}
              {renderSection("Markets Prices", citiesData["Markets prices"])}
              {renderSection("Rent Per Month Prices", citiesData["Rent Per Month prices"])}
              {renderSection("Restaurants Prices", citiesData["Restaurants prices"])}
              {renderSection("Salaries And Financing Prices", citiesData["Salaries And Financing prices"])}
              {renderSection("Sports And Leisure Prices", citiesData["Sports And Leisure prices"])}
              {renderSection("Transportation Prices", citiesData["Transportation prices"])}
              {renderSection("Utilities Per Month Prices", citiesData["Utilities Per Month prices"])}
            </div>
            : 'Multiple cities'
          }
        </div>
      </main>
    </>
  )
}
